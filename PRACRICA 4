public abstract class Empleado {
    protected String nombre;

    public Empleado(String nombre) {
        this.nombre = nombre;
    }

    public abstract double CalcularSalarioMensual();

    @Override
    public String toString() {
        return "Empleado: " + nombre;
    }
}

public class EmpleadoTiempoCompleto extends Empleado {
    private double salarioAnual;

    public EmpleadoTiempoCompleto(String nombre, double salarioAnual) {
        super(nombre);
        this.salarioAnual = salarioAnual;
    }

    @Override
    public double CalcularSalarioMensual() {
        return salarioAnual / 12;
    }

    @Override
    public String toString() {
        return "EmpleadoTiempoCompleto [nombre=" + nombre + ", salarioAnual=" + salarioAnual + "]";
    }
}
public class EmpleadoTiempoHorario extends Empleado {
    private double horas;
    private double tarifaHora;

    public EmpleadoTiempoHorario(String nombre, double horas, double tarifaHora) {
        super(nombre);
        this.horas = horas;
        this.tarifaHora = tarifaHora;
    }

    @Override
    public double CalcularSalarioMensual() {
        return horas * tarifaHora;
    }

    @Override
    public String toString() {
        return "EmpleadoTiempoHorario [nombre=" + nombre + ", horas=" + horas + ", tarifaHora=" + tarifaHora + "]";
    }
}
main System.out.println("\n=== EMPLEADOS ===");
        Empleado[] empleados = new Empleado[5];

        empleados[0] = new EmpleadoTiempoCompleto("Ana", 48000);
        empleados[1] = new EmpleadoTiempoCompleto("Luis", 60000);
        empleados[2] = new EmpleadoTiempoCompleto("Marta", 72000);
        empleados[3] = new EmpleadoTiempoHorario("Carlos", 160, 15);
        empleados[4] = new EmpleadoTiempoHorario("Elena", 200, 20);

        for (Empleado e : empleados) {
            System.out.println(e);
            System.out.println("Salario mensual: " + e.CalcularSalarioMensual());
            System.out.println("----------------------");
        }
    }
}



//
public abstract class Figura {
    protected String color;

    public Figura(String color) {
        this.color = color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public String getColor() {
        return color;
    }

    @Override
    public String toString() {
        return "Figura de color: " + color;
    }

    public abstract double area();
    public abstract double perimetro();
}
public class Cuadrado extends Figura implements Coloreado {
    private double lado;

    public Cuadrado(double lado, String color) {
        super(color);
        this.lado = lado;
    }

    @Override
    public double area() {
        return lado * lado;
    }

    @Override
    public double perimetro() {
        return 4 * lado;
    }

    @Override
    public String comoColorear() {
        return "Colorear los cuatro lados";
    }

    @Override
    public String toString() {
        return "Cuadrado [lado=" + lado + ", color=" + color + "]";
    }
}
public class Circulo extends Figura {
    private double radio;

    public Circulo(double radio, String color) {
        super(color);
        this.radio = radio;
    }

    @Override
    public double area() {
        return Math.PI * radio * radio;
    }

    @Override
    public double perimetro() {
        return 2 * Math.PI * radio;
    }

    @Override
    public String toString() {
        return "Círculo [radio=" + radio + ", color=" + color + "]";
    }
}import java.util.Random;

public class Main {
    public static void main(String[] args) {
        // ======================
        // PRUEBA DE FIGURAS
        // ======================
        System.out.println("=== FIGURAS ===");
        Figura[] figuras = new Figura[5];
        Random rand = new Random();

        for (int i = 0; i < figuras.length; i++) {
            if (rand.nextBoolean()) { // Cuadrado
                double lado = rand.nextInt(10) + 1;
                figuras[i] = new Cuadrado(lado, "Rojo");
            } else { // Círculo
                double radio = rand.nextInt(10) + 1;
                figuras[i] = new Circulo(radio, "Azul");
            }
        }

        for (Figura f : figuras) {
            System.out.println(f);
            System.out.println("Área: " + f.area());
            System.out.println("Perímetro: " + f.perimetro());

            if (f instanceof Coloreado) {
                System.out.println("Cómo colorear: " + ((Coloreado) f).comoColorear());
            }
            System.out.println("----------------------");
        }